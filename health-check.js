const mysql = require("mysql2/promise");
const fetch = require("node-fetch");

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
async function checkDatabase() {
  try {
    const connection = await mysql.createConnection({
      host: process.env.DB_HOST || "localhost",
      user: process.env.DB_USER || "root",
      password: process.env.DB_PASS || "",
      database: process.env.DB_NAME || "assets",
    });

    const [rows] = await connection.execute(
      "SELECT COUNT(*) as count FROM assets"
    );
    console.log("‚úÖ Database connection successful");
    console.log(`üìä Total assets in database: ${rows[0].count}`);

    await connection.end();
    return true;
  } catch (error) {
    console.error("‚ùå Database connection failed:", error.message);
    return false;
  }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API endpoints
async function checkAPI() {
  const endpoints = [
    { name: "Get all assets", url: "http://localhost:4000/api/assets" },
    { name: "Get asset stats", url: "http://localhost:4000/api/assets/stats" },
    {
      name: "Get asset summary",
      url: "http://localhost:4000/api/assets/summary",
    },
  ];

  for (const endpoint of endpoints) {
    try {
      const response = await fetch(endpoint.url);
      if (response.ok) {
        console.log(`‚úÖ ${endpoint.name}: OK`);
      } else {
        console.log(
          `‚ùå ${endpoint.name}: ${response.status} ${response.statusText}`
        );
      }
    } catch (error) {
      console.log(`‚ùå ${endpoint.name}: ${error.message}`);
    }
  }
}

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Frontend
async function checkFrontend() {
  try {
    const response = await fetch("http://localhost:3000");
    if (response.ok) {
      console.log("‚úÖ Frontend is running");
    } else {
      console.log(
        `‚ùå Frontend error: ${response.status} ${response.statusText}`
      );
    }
  } catch (error) {
    console.log(`‚ùå Frontend not accessible: ${error.message}`);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
async function runHealthCheck() {
  console.log("üîç Running system health check...\n");

  console.log("üìä Checking Database...");
  await checkDatabase();

  console.log("\nüåê Checking Backend API...");
  await checkAPI();

  console.log("\nüé® Checking Frontend...");
  await checkFrontend();

  console.log("\n‚úÖ Health check completed!");
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ñ‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
if (require.main === module) {
  runHealthCheck().catch(console.error);
}

module.exports = { checkDatabase, checkAPI, checkFrontend, runHealthCheck };
